generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Actor {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  project     Project  @relation(fields: [id], references: [id])
}

model Condition {
  id          Int      @id @default(autoincrement())
  publicId    String
  description String?
  useCase     UseCase[]  @relation(fields: [id], references: [id])
}

model UseCase {
  id              Int         @id @default(autoincrement())
  publicId        String
  project         Project     @relation(fields: [id], references: [id])
  name            String
  creator         User        @relation(fields: [id], references: [id])
  dateCreated     DateTime
  dateModified    DateTime
  primaryActor    Actor       @relation(fields: [id], references: [id])
  secondaryActors Actor[]     @relation(fields: [id], references: [id])
  description     String?
  conditions      Condition[] @relation(fields: [id], references: [id])
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  owner       User     @relation(fields: [id], references: [id])
  useCases    UseCase[] @relation(fields: [id], references: [id]), onDelete: Cascade, onUpdate: NoAction)
  actors      Actor[]  @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

enum Role {
  ADMIN
  USER
}

model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  password String
  projects Project[] @relation(fields: [id], references: [id])
  role     Role      @default(USER)
}